{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":11894575,"sourceType":"datasetVersion","datasetId":7476593}],"dockerImageVersionId":30887,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Install required library\n\n!pip install sentence_transformers -q","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T09:51:25.982468Z","iopub.execute_input":"2025-05-21T09:51:25.982768Z","iopub.status.idle":"2025-05-21T09:51:30.238731Z","shell.execute_reply.started":"2025-05-21T09:51:25.982739Z","shell.execute_reply":"2025-05-21T09:51:30.237835Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"import re\nfrom sentence_transformers import SentenceTransformer, util\nimport matplotlib.pyplot as plt","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T09:51:38.797732Z","iopub.execute_input":"2025-05-21T09:51:38.798013Z","iopub.status.idle":"2025-05-21T09:52:01.268495Z","shell.execute_reply.started":"2025-05-21T09:51:38.797991Z","shell.execute_reply":"2025-05-21T09:52:01.267615Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"import json","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T09:55:23.578281Z","iopub.execute_input":"2025-05-21T09:55:23.578570Z","iopub.status.idle":"2025-05-21T09:55:23.582091Z","shell.execute_reply.started":"2025-05-21T09:55:23.578547Z","shell.execute_reply":"2025-05-21T09:55:23.581308Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"null = None","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T09:53:04.578432Z","iopub.execute_input":"2025-05-21T09:53:04.579138Z","iopub.status.idle":"2025-05-21T09:53:04.582834Z","shell.execute_reply.started":"2025-05-21T09:53:04.579107Z","shell.execute_reply":"2025-05-21T09:53:04.581880Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"# # Job description for matching\n# job_description = \"\"\"Looking for a candidate with expertise in Python, Machine Learning, NLP, and SQL. \n# Must have experience in building predictive models and working with large datasets.\"\"\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T09:59:40.205004Z","iopub.execute_input":"2025-05-21T09:59:40.205303Z","iopub.status.idle":"2025-05-21T09:59:40.208626Z","shell.execute_reply.started":"2025-05-21T09:59:40.205282Z","shell.execute_reply":"2025-05-21T09:59:40.207857Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"# Job description for matching  \njob_description = \"\"\"Looking for a Machine Learning Engineer or Data Scientist with 3+ years of experience.  \nMust have strong skills in Python (Scikit-learn, TensorFlow, PyTorch), SQL (Spark/Hadoop/ETL), and cloud platforms (AWS/GCP/Azure).  \nExperience in NLP, LLMs, GenAI, statistical analysis, and data visualization (Tableau/Power BI) is preferred.  \nRemote or based in Mumbai, Bangalore, or Pune.\"\"\"  ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:21:12.351763Z","iopub.execute_input":"2025-05-21T10:21:12.352091Z","iopub.status.idle":"2025-05-21T10:21:12.355657Z","shell.execute_reply.started":"2025-05-21T10:21:12.352064Z","shell.execute_reply":"2025-05-21T10:21:12.354791Z"}},"outputs":[],"execution_count":61},{"cell_type":"code","source":"with open('/kaggle/input/rerank-json-paresd/resume_data_pdf5.json', 'r') as json_file:\n    resume_data = json.load(json_file)\n\n# If the resume ranker expects a list of dictionaries, wrap the dictionary in a list\nresume_data_list = [resume_data]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:08:08.689064Z","iopub.execute_input":"2025-05-21T10:08:08.689480Z","iopub.status.idle":"2025-05-21T10:08:08.705454Z","shell.execute_reply.started":"2025-05-21T10:08:08.689446Z","shell.execute_reply":"2025-05-21T10:08:08.704707Z"}},"outputs":[],"execution_count":38},{"cell_type":"code","source":"resume_data_list","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:08:09.344118Z","iopub.execute_input":"2025-05-21T10:08:09.344393Z","iopub.status.idle":"2025-05-21T10:08:09.350057Z","shell.execute_reply.started":"2025-05-21T10:08:09.344371Z","shell.execute_reply":"2025-05-21T10:08:09.349166Z"}},"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"[{'contactInformation': {'name': 'Aaditya Vijay Hirurkar',\n   'email': None,\n   'phoneNumber': None,\n   'websitePortfolioLinkedIn': None,\n   'githubProfile': None},\n  'education': {'institutionName': 'University of Mumbai',\n   'degree': 'Bachelor of Engineering, Information Technology',\n   'graduationDate': '2008'},\n  'experience': [{'jobTitle': 'Business Analyst Sr. Technical Business Analyst',\n    'companyName': 'Company Name',\n    'location': None,\n    'datesOfEmployment': 'Jul 2011 to Dec 2013',\n    'description': 'Requirement Gathering, Requirement Analysis, Release management, Product management, Product implementation role, BRS analysis, Feasibility analysis, Vender management, Client handling, Product Management'},\n   {'jobTitle': 'Software Implementation Engineer',\n    'companyName': 'Base Information Management Pvt. Ltd.',\n    'location': None,\n    'datesOfEmployment': 'Dec 2008 to Jul 2011',\n    'description': 'To communicate directly with the client and gather details of requirement, Documentation (URS,SRS), Designing screen layouts, Interact with development team, QC team for effective solution'}],\n  'skills': ['C',\n   'C++',\n   'Core Java',\n   'Oracle 9i',\n   'MS SQL Server-2005',\n   'IBM DB2',\n   'UML',\n   'HTML',\n   'XML',\n   'Windows 9X/XP/2000/2003 Server',\n   'Linux Red hat 5',\n   'SUSE 11',\n   'Rational Rose',\n   'MS Visio',\n   'MS Project',\n   'Oracle SQL Developer',\n   'Crystal Reports',\n   'Java Workflow Editor',\n   'Eclipse',\n   'Jboss',\n   'Tomcat5',\n   'IBM Websphere App Server 7']}]"},"metadata":{}}],"execution_count":39},{"cell_type":"code","source":"resumes = [{\"Name\": 'Steve SunA', 'Email': 'stevesun1245@gmail.com', 'Skills': ['Python', 'Data Analysis', 'Machine Learning', 'Communication', 'Deep Learning', 'SQL', 'AI', 'Data Visualization', 'Statistical Analysis', 'Big Data', 'Critical Thinking', 'Storytelling'], 'Education': {'University': ['EDUCATION\\nSkyline University'], 'Degree': ['Master of Science in Data Science'], 'GPA': ['3.81 GPA'], 'Start Date': ['August 2018'], 'End Date': ['May 2020']}, 'Experience': {'work': ['DataNova Insights\\nData Scientist March 2021 – Present\\n• Developed and deployed machine learning models to optimize customer retention, increasing\\nengagement by 15%.\\n• Conducted exploratory data analysis (EDA) and statistical testing to derive actionable business\\ninsights.\\n• Built scalable ETL pipelines to process large datasets using Python and SQL.\\n• Collaborated with cross-functional teams to improve decision-making through predictive analytics.\\nNeural Sphere Labs\\nData Scientist June 2019 – December 2023\\n• Designed and implemented deep learning models for image classification, improving accuracy by\\n20%.\\n• Automated data preprocessing and feature engineering workflows using Python and Pandas.\\n• Created interactive dashboards in Power BI to visualize key performance indicators (KPIs).\\n• Partnered with engineers to deploy ML models into production, ensuring seamless integration.']}}\n    \n    ,\n{\n  \"Contact Information\": {\n    \"Name\": \"Steve Sun\",\n    \"Email\": \"stevesun1245@gmail.com\",\n    \"Phone Number\": \"(123)456789\",\n    \"Website/Portfolio/LinkedIn\": \"linkedin.com/in/stevesun\",\n    \"Github Profile\": null\n  },\n  \"Education\": [\n    {\n      \"Institution Name\": \"Skyline University\",\n      \"Degree\": \"Master of Science in Data Science\",\n      \"Graduation Date\": \"May 2020\",\n      \"GPA\": \"3.81\"\n    }\n  ],\n  \"Experience\": [\n    {\n      \"Job Title\": \"Data Scientist\",\n      \"Company Name\": \"DataNova Insights\",\n      \"Location\": \"Hyderabad\",\n      \"Dates of Employment\": \"March 2021 - Present\",\n      \"Description\": \"Developed and deployed machine learning models to optimize customer retention, increasing engagement by 15%. Conducted exploratory data analysis (EDA) and statistical testing to derive actionable business insights. Built scalable ETL pipelines to process large datasets using Python and SQL. Collaborated with cross-functional teams to improve decision-making through predictive analytics.\"\n    },\n    {\n      \"Job Title\": \"Data Scientist\",\n      \"Company Name\": \"Neural Sphere Labs\",\n      \"Location\": null,\n      \"Dates of Employment\": \"June 2019 - December 2023\",\n      \"Description\": \"Designed and implemented deep learning models for image classification, improving accuracy by 20%. Automated data preprocessing and feature engineering workflows using Python and Pandas. Created interactive dashboards in Power BI to visualize key performance indicators (KPIs). Partnered with engineers to deploy ML models into production, ensuring seamless integration.\"\n    }\n  ],\n  \"Skills\": [\n    \"Python\",\n    \"SQL\",\n    \"Machine Learning\",\n    \"AI\",\n    \"Data Visualization\",\n    \"Statistical Analysis\",\n    \"Big Data\",\n    \"Cloud Technologies\",\n    \"Problem-Solving\",\n    \"Critical Thinking\",\n    \"Communication\",\n    \"Storytelling\"\n  ]\n},\n  {'Contact Information': {'Name': 'pdf1',\n   'Email': None,\n   'Phone Number': None,\n   'Website/Portfolio/LinkedIn': None,\n   'Github Profile': None},\n  'Education': [{'Institution Name': 'Binghamton University, State University of New York',\n    'Degree': 'Masters of Science : Industrial and Systems Engineering',\n    'Graduation Date': 'Aug 2016',\n    'GPA': '3.51/4.00'},\n   {'Institution Name': 'Osmania University',\n    'Degree': 'Bachelors of Engineering : Mechanical Engineering',\n    'Graduation Date': 'May 2014',\n    'GPA': '3.33/4.00'}],\n  'Experience': [{'Job Title': 'Data Analyst',\n    'Company Name': 'Company Name',\n    'Location': 'State',\n    'Dates of Employment': '07/2016 to Current',\n    'Description': 'Data Analyst'},\n   {'Job Title': 'Student Manager',\n    'Company Name': 'Company Name',\n    'Location': 'State',\n    'Dates of Employment': '09/2015 to 05/2016',\n    'Description': 'Undertook a leadership and advisory role in training newcomers to hone their culinary and behavioral skills.'},\n   {'Job Title': 'Intern',\n    'Company Name': 'Company Name',\n    'Location': None,\n    'Dates of Employment': '06/2013 to 07/2013',\n    'Description': 'Identified the areas in the assembly line of a light commercial vehicle where more operations could be housed. Developed a detailed model of improved layout to accommodate more operations using AutoCAD to improve the space utilization by 300%.'},\n   {'Job Title': 'Consultant',\n    'Company Name': None,\n    'Location': None,\n    'Dates of Employment': None,\n    'Description': \"Consultant for a self-storage company to classify the customers as 'worthy' and 'not worthy' based on their activity on the company website using the Random Forest algorithm.\"}],\n  'Skills': ['Apache',\n   'AutoCAD',\n   'charts',\n   'Credit',\n   'clients',\n   'Data Analysis',\n   'Data Visualization',\n   'Databases',\n   'Dec',\n   'decision-making',\n   'layout',\n   'leadership',\n   'MATLAB',\n   'Microsoft Access',\n   'MS Excel',\n   'Minitab',\n   'MySQL',\n   'Optimization',\n   'Oracle Database',\n   'Python',\n   'SAS',\n   'Simulation',\n   'Six Sigma',\n   'SPSS',\n   'SQL',\n   'Statistical Analysis',\n   'Tableau',\n   'Visio',\n   'website',\n   'R',\n   'Base SAS',\n   'Numpy',\n   'Pandas',\n   'Matplotlib',\n   'Scikit-learn',\n   'SPSS',\n   'Minitab',\n   'MATLAB',\n   'Apache Spark',\n   'SQL',\n   'MS Excel',\n   'MS Visio',\n   'Tableau',\n   'MySQL',\n   'Oracle Database',\n   'Microsoft Access']}\n    ,\n    \n    {'contactInformation': {'name': 'Sagun Pandeypdf2',\n   'email': None,\n   'phoneNumber': None,\n   'website': 'www.sagunpandey.com',\n   'linkedin': 'www.linkedin.com/in/sagunpandey',\n   'github': 'www.github.com/sagunpandey'},\n  'education': [{'institutionName': 'Lamar University',\n    'degree': 'Master of Science : Computer Science',\n    'graduationDate': '2017'},\n   {'institutionName': 'Tribhuvan University',\n    'degree': 'Bachelor of Engineering : Electronics and Communication Engineering',\n    'graduationDate': '2013'}],\n  'experience': [{'jobTitle': 'Information Technology Intern (Test Automation Engineer)',\n    'companyName': 'Company Name',\n    'location': 'City, State',\n    'datesOfEmployment': '05/2017 to 08/2017',\n    'description': \"Created nicely baked ‘Test Automation Framework' to provide an execution environment for the automation test scripts.\"},\n   {'jobTitle': 'Java Full Stack Developer',\n    'companyName': 'Company Name',\n    'location': 'City, State',\n    'datesOfEmployment': '05/2014 to 06/2016',\n    'description': 'Worked on varied aspects of application development including requirement analysis, design, implementation, and testing.'},\n   {'jobTitle': 'Java Developer Intern',\n    'companyName': 'Company Name',\n    'location': 'City, State',\n    'datesOfEmployment': '03/2014 to 05/2014',\n    'description': 'Core Java programming with Multithreading Exception Handling, File Handling, IO, Generics, and Java Collections.'},\n   {'jobTitle': 'Software Developer Intern',\n    'companyName': 'Company Name',\n    'location': 'City, State',\n    'datesOfEmployment': '01/2013 to 10/2013',\n    'description': 'Designed and developed applications using Scrum, an iterative and incremental Agile Software Development methodology.'}],\n  'skills': ['Java/J2EE',\n   'JavaScript',\n   'Android',\n   'HTML',\n   'CSS',\n   'SQL',\n   'C',\n   'C',\n   'Spring',\n   'Restful-Web Services',\n   'Hibernate',\n   'AngularJS',\n   'ReactJS',\n   'jQuery',\n   'Bootstrap',\n   'Selenium WebDriver',\n   'Cucumber',\n   'MySQL',\n   'PostgreSQL',\n   'Oracle',\n   'MongoDB',\n   'Gradle',\n   'Maven',\n   'Ant',\n   'Agile/Scrum',\n   'Waterfall',\n   'TDD',\n   'Clean Coding',\n   'Continuous Delivery',\n   'Microservices',\n   'Single Page Application',\n   'REST',\n   'Client/Server',\n   'SVN',\n   'Git',\n   'AWS',\n   'Bower',\n   'Grunt',\n   'Npm',\n   'Node',\n   'JSON',\n   'XML',\n   'Jenkins',\n   'Eclipse',\n   'IntelliJ',\n   'Android Studio',\n   'Linux',\n   'Windows']}\n             ,\n    {'Contact Information': {'Name': 'pdf3',\n   'Email': None,\n   'Phone Number': None,\n   'Website/Portfolio/LinkedIn': None,\n   'Github Profile': None},\n  'Education': [{'Institution Name': 'University of Pennsylvania, School of Eng. and Applied Science',\n    'Degree': 'Master of Science : Mech. Eng. & Applied Mechanics',\n    'Graduation Date': 'Jun'},\n   {'Institution Name': 'Harbin Institute of Technology (HIT)',\n    'Degree': 'Bachelor of Science : Mechanical Design and Automation',\n    'Graduation Date': 'SepAug'}],\n  'Experience': [{'Job Title': 'R&D Product Development Engineer',\n    'Company Name': 'Company Name',\n    'Location': 'City',\n    'Dates of Employment': 'June 2016 to Current',\n    'Description': 'Design and build a tail-sitter VTOL(vertical take off and landing) UAV(unmanned aerial vehicle) which takes off and lands vertically and travels horizontally. Main duties include but not limit to aerodynamics modeling, UAV control system design, mechanical manufacturing, simulation and tuning/experiments.'},\n   {'Job Title': 'Research assistant',\n    'Company Name': 'Company Name',\n    'Location': 'City',\n    'Dates of Employment': 'May 2015 to February 2016',\n    'Description': 'Research assistant for Wharton School environment economics projects on Europe Emission Trading System (EU ETC). Main duties include large scale data collecting, cleaning, merging, database construction and data analysis, etc.'},\n   {'Job Title': 'Mechanical Technician',\n    'Company Name': 'Company Name',\n    'Location': 'City',\n    'Dates of Employment': 'August 2013 to September 2013',\n    'Description': 'Check, report on reducer components, automobile chassis producing, processing and assembly line. Trained in mechanical manufacturing fundamentals in industrial production of automobiles.'}],\n  'Skills': ['3D',\n   'assembly language',\n   'AutoCAD',\n   'automobiles',\n   'C',\n   'C language',\n   'CAD',\n   'Chinese',\n   'Clustering',\n   'com',\n   'controller',\n   'data analysis',\n   'Database',\n   'database software',\n   'designing',\n   'economics',\n   'Editing',\n   'embedded system',\n   'English',\n   'Experiments',\n   'GUI',\n   'graphic',\n   'Java',\n   'Laser',\n   'Lathe',\n   'Machine Learning',\n   'MATLAB',\n   'Mechanical',\n   'Mechanical Design',\n   'Mechanical Engineering',\n   'Excel',\n   'Windows 7',\n   'Word',\n   'Mill',\n   'Modeling',\n   'Networks',\n   'Neural',\n   'Operating Systems',\n   'OS',\n   'painting',\n   'camera',\n   'PLC',\n   'predict',\n   'producing',\n   'Programming',\n   'Python',\n   'Rendering',\n   'Research',\n   'Robotics',\n   'Simulation',\n   'Solidworks',\n   'SPSS',\n   'SQL',\n   'SQL Server',\n   'STATA',\n   'Statistics',\n   'system design',\n   'Trading System',\n   'vision']},\n           \n    {'contactInformation': {'name': 'Chu-Hsiang Wupdf4',\n   'email': None,\n   'phoneNumber': None,\n   'website/portfolio/linkedIn': None,\n   'githubProfile': None},\n  'education': [{'institutionName': 'UT Austin',\n    'degree': 'Ph.D',\n    'graduationDate': 'May 2018',\n    'fieldOfStudy': 'PETROLEUM ENGINEERING Scientific Computation'},\n   {'institutionName': 'National Taiwan University',\n    'degree': 'M.S',\n    'graduationDate': 'Jun. 2010',\n    'fieldOfStudy': 'MECHANICAL ENGINEERING'},\n   {'institutionName': 'National Tsing Hua University',\n    'degree': 'B.S',\n    'graduationDate': 'Jun. 2008',\n    'fieldOfStudy': 'POWER MECHANICAL ENGINEERING'}],\n  'experience': [{'jobTitle': 'ENGINEERING INTERN',\n    'companyName': 'Company Name',\n    'location': 'State',\n    'datesOfEmployment': '08/2016 - 12/2016',\n    'description': 'Develop a cavings transport model for optimizing hole-cleaning operations. Developed a solids transport model for predicting cuttings/cavings bed height during a hole-cleaning operation.'},\n   {'jobTitle': 'ENGINEERING INTERN',\n    'companyName': None,\n    'location': 'City, State',\n    'datesOfEmployment': '05/2016 - 08/2016',\n    'description': 'Optimize diverter pumping schedule for better production performance after well re-stimulation. Built a simulator to model proppant, diverter, and slurry distribution in a plug-and-perf hydraulic fracturing operation.'},\n   {'jobTitle': 'PROCESS ENGINEER',\n    'companyName': 'Company Name',\n    'location': 'City',\n    'datesOfEmployment': '04/2012 - 05/2013',\n    'description': 'Improve display yield through statistical modeling, process control, and tool modifications. Won Qualstar award in Nov. 2012 by completing two specific yield improvement tasks in merely two months.'}],\n  'skills': ['C++',\n   'Python',\n   'MATLAB',\n   'Git',\n   'Bash',\n   'R',\n   'SQL',\n   'Machine Learning',\n   'Linux',\n   'Unix',\n   'High performance computing clusters',\n   'Scikit-learn',\n   'Pandas',\n   'Seaborn',\n   'matplotlib',\n   'TensorFlow',\n   'CFD-DEM',\n   'OpenFOAM',\n   'CFD-ACE+',\n   'Fluent',\n   'COMSOL',\n   'LAMMPS',\n   'LIGGGHTS',\n   'CMG',\n   'FracPro',\n   'Saphir',\n   'SEM',\n   'AFM',\n   'Confocal Microscopy',\n   'Regression analysis',\n   'Statistical process control',\n   'Design of experiments']},\n    {'contactInformation': {'name': 'Aaditya Vijay Hirurkarpdf5',\n   'email': None,\n   'phoneNumber': None,\n   'websitePortfolioLinkedIn': None,\n   'githubProfile': None},\n  'education': {'institutionName': 'University of Mumbai',\n   'degree': 'Bachelor of Engineering, Information Technology',\n   'graduationDate': '2008'},\n  'experience': [{'jobTitle': 'Business Analyst Sr. Technical Business Analyst',\n    'companyName': 'Company Name',\n    'location': None,\n    'datesOfEmployment': 'Jul 2011 to Dec 2013',\n    'description': 'Requirement Gathering, Requirement Analysis, Release management, Product management, Product implementation role, BRS analysis, Feasibility analysis, Vender management, Client handling, Product Management'},\n   {'jobTitle': 'Software Implementation Engineer',\n    'companyName': 'Base Information Management Pvt. Ltd.',\n    'location': None,\n    'datesOfEmployment': 'Dec 2008 to Jul 2011',\n    'description': 'To communicate directly with the client and gather details of requirement, Documentation (URS,SRS), Designing screen layouts, Interact with development team, QC team for effective solution'}],\n  'skills': ['C',\n   'C++',\n   'Core Java',\n   'Oracle 9i',\n   'MS SQL Server-2005',\n   'IBM DB2',\n   'UML',\n   'HTML',\n   'XML',\n   'Windows 9X/XP/2000/2003 Server',\n   'Linux Red hat 5',\n   'SUSE 11',\n   'Rational Rose',\n   'MS Visio',\n   'MS Project',\n   'Oracle SQL Developer',\n   'Crystal Reports',\n   'Java Workflow Editor',\n   'Eclipse',\n   'Jboss',\n   'Tomcat5',\n   'IBM Websphere App Server 7']} ]\n           ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:24:06.263296Z","iopub.execute_input":"2025-05-21T10:24:06.263683Z","iopub.status.idle":"2025-05-21T10:24:06.283038Z","shell.execute_reply.started":"2025-05-21T10:24:06.263652Z","shell.execute_reply":"2025-05-21T10:24:06.282074Z"}},"outputs":[],"execution_count":71},{"cell_type":"code","source":"# Function Definitions\n\ndef normalize_text(data):\n    \"\"\"\n    Recursively extract and combine text from nested dictionaries and lists.\n    \"\"\"\n    if isinstance(data, str):\n        return data\n    elif isinstance(data, list):\n        return \" \".join(normalize_text(item) for item in data)\n    elif isinstance(data, dict):\n        return \" \".join(normalize_text(value) for value in data.values())\n    else:\n        return str(data)\n\ndef match_resume_to_job(resume_text, job_description, model):\n    \"\"\"\n    Compute similarity between resume text and job description using a sentence-transformer model.\n    \"\"\"\n    embeddings = model.encode([resume_text, job_description], convert_to_tensor=True)\n    similarity = util.cos_sim(embeddings[0], embeddings[1])\n    return similarity.item()\n\ndef compute_skill_match(skills, job_description):\n    \"\"\"\n    Compute the percentage of skills that match the job description.\n    \"\"\"\n    matched_skills = [skill for skill in skills if skill.lower() in job_description.lower()]\n    return len(matched_skills) / len(skills) if skills else 0","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:00:22.533193Z","iopub.execute_input":"2025-05-21T10:00:22.533481Z","iopub.status.idle":"2025-05-21T10:00:22.539416Z","shell.execute_reply.started":"2025-05-21T10:00:22.533458Z","shell.execute_reply":"2025-05-21T10:00:22.538335Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"def rank_candidates(resumes, job_description, model):\n    \"\"\"\n    Rank candidates based on similarity scores for skills, education, and experience.\n    \"\"\"\n    scores = []\n\n    for resume in resumes:\n        skills_text = normalize_text(resume.get(\"Skills\", []))\n        print(skills_text)\n        experience_text = normalize_text(resume.get(\"Experience\", {}))\n        print(experience_text)\n        education_text = normalize_text(resume.get(\"Education\", {}))\n\n\n        # Compute similarity scores\n        skill_score = match_resume_to_job(skills_text, job_description, model)\n        print(skill_score)\n        experience_score = match_resume_to_job(experience_text, job_description, model)\n        education_score = match_resume_to_job(education_text, job_description, model)\n        keyword_match_score = compute_skill_match(resume.get(\"Skills\", []), job_description)\n\n        # Weighted total score\n        total_score = 0.5 * skill_score + 0.4 * experience_score + 0.1 * education_score + 0.1 * keyword_match_score\n\n        # Collect scores\n        scores.append({\n                    \"Name\": (\n                        resume.get(\"Name\")  # First try top-level \"Name\"\n                        or resume.get(\"contactInformation\", {}).get(\"name\")  # Try lowercase format\n                        or resume.get(\"Contact Information\", {}).get(\"Name\")  # Try title case format\n                        or \"Unknown Candidate\"  # Fallback if no name found\n                    ),\n                    \"Skill Score\": skill_score,\n                    \"Experience Score\": experience_score,\n                    \"Education Score\": education_score,\n                    \"Keyword Match Score\": keyword_match_score,\n                    \"Total Score\": total_score\n            })\n\n    return sorted(scores, key=lambda x: x[\"Total Score\"], reverse=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:17:47.902334Z","iopub.execute_input":"2025-05-21T10:17:47.902666Z","iopub.status.idle":"2025-05-21T10:17:47.909099Z","shell.execute_reply.started":"2025-05-21T10:17:47.902630Z","shell.execute_reply":"2025-05-21T10:17:47.908237Z"}},"outputs":[],"execution_count":56},{"cell_type":"code","source":"\ndef plot_scores(ranked_candidates):\n    \"\"\"\n    Visualize the scores of candidates using a bar chart.\n    \"\"\"\n    names = [candidate['Name'] for candidate in ranked_candidates]\n    skill_scores = [candidate['Skill Score'] for candidate in ranked_candidates]\n    experience_scores = [candidate['Experience Score'] for candidate in ranked_candidates]\n    education_scores = [candidate['Education Score'] for candidate in ranked_candidates]\n    keyword_match_scores = [candidate['Keyword Match Score'] for candidate in ranked_candidates]\n\n    # Plot setup\n    bar_width = 0.2\n    index = range(len(names))\n\n    # Create bars for each category\n    plt.bar(index, skill_scores, bar_width, label=\"Skills\")\n    plt.bar([i + bar_width for i in index], experience_scores, bar_width, label=\"Experience\")\n    plt.bar([i + 2 * bar_width for i in index], education_scores, bar_width, label=\"Education\")\n    plt.bar([i + 3 * bar_width for i in index], keyword_match_scores, bar_width, label=\"Keyword Match\")\n\n    # Configure plot details\n    plt.xticks([i + 1.5 * bar_width for i in index], names)\n    plt.xlabel(\"Candidates\")\n    plt.ylabel(\"Scores\")\n    plt.title(\"Candidate Comparison\")\n    plt.legend()\n\n    # Show plot\n    plt.tight_layout()\n    plt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:17:51.442805Z","iopub.execute_input":"2025-05-21T10:17:51.443106Z","iopub.status.idle":"2025-05-21T10:17:51.449279Z","shell.execute_reply.started":"2025-05-21T10:17:51.443084Z","shell.execute_reply":"2025-05-21T10:17:51.448378Z"}},"outputs":[],"execution_count":57},{"cell_type":"code","source":"# Load SentenceTransformer model\nmodel = SentenceTransformer('paraphrase-multilingual-MiniLM-L12-v2')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:21:32.753736Z","iopub.execute_input":"2025-05-21T10:21:32.754263Z","iopub.status.idle":"2025-05-21T10:21:35.778237Z","shell.execute_reply.started":"2025-05-21T10:21:32.754217Z","shell.execute_reply":"2025-05-21T10:21:35.777517Z"}},"outputs":[],"execution_count":63},{"cell_type":"code","source":"# Rank candidates\nranked_candidates = rank_candidates(resumes, job_description, model)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:24:14.249036Z","iopub.execute_input":"2025-05-21T10:24:14.249335Z","iopub.status.idle":"2025-05-21T10:24:14.878239Z","shell.execute_reply.started":"2025-05-21T10:24:14.249313Z","shell.execute_reply":"2025-05-21T10:24:14.877481Z"}},"outputs":[{"name":"stdout","text":"Python Data Analysis Machine Learning Communication Deep Learning SQL AI Data Visualization Statistical Analysis Big Data Critical Thinking Storytelling\nDataNova Insights\nData Scientist March 2021 – Present\n• Developed and deployed machine learning models to optimize customer retention, increasing\nengagement by 15%.\n• Conducted exploratory data analysis (EDA) and statistical testing to derive actionable business\ninsights.\n• Built scalable ETL pipelines to process large datasets using Python and SQL.\n• Collaborated with cross-functional teams to improve decision-making through predictive analytics.\nNeural Sphere Labs\nData Scientist June 2019 – December 2023\n• Designed and implemented deep learning models for image classification, improving accuracy by\n20%.\n• Automated data preprocessing and feature engineering workflows using Python and Pandas.\n• Created interactive dashboards in Power BI to visualize key performance indicators (KPIs).\n• Partnered with engineers to deploy ML models into production, ensuring seamless integration.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1d2e7b668a8e497294ad4f9f037b9506"}},"metadata":{}},{"name":"stdout","text":"0.40061670541763306\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"07b9e9ef96f140b2b3f7b1dfe9ca1865"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"986200c524064527813a63d0e6996329"}},"metadata":{}},{"name":"stdout","text":"Python SQL Machine Learning AI Data Visualization Statistical Analysis Big Data Cloud Technologies Problem-Solving Critical Thinking Communication Storytelling\nData Scientist DataNova Insights Hyderabad March 2021 - Present Developed and deployed machine learning models to optimize customer retention, increasing engagement by 15%. Conducted exploratory data analysis (EDA) and statistical testing to derive actionable business insights. Built scalable ETL pipelines to process large datasets using Python and SQL. Collaborated with cross-functional teams to improve decision-making through predictive analytics. Data Scientist Neural Sphere Labs None June 2019 - December 2023 Designed and implemented deep learning models for image classification, improving accuracy by 20%. Automated data preprocessing and feature engineering workflows using Python and Pandas. Created interactive dashboards in Power BI to visualize key performance indicators (KPIs). Partnered with engineers to deploy ML models into production, ensuring seamless integration.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3a93a9510ba14d51a8c721bd518b5fad"}},"metadata":{}},{"name":"stdout","text":"0.41048598289489746\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"20f63d4e373a47dcafcc89c531a19c5d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7d4d27aaa300460e8a84760abd5bc657"}},"metadata":{}},{"name":"stdout","text":"Apache AutoCAD charts Credit clients Data Analysis Data Visualization Databases Dec decision-making layout leadership MATLAB Microsoft Access MS Excel Minitab MySQL Optimization Oracle Database Python SAS Simulation Six Sigma SPSS SQL Statistical Analysis Tableau Visio website R Base SAS Numpy Pandas Matplotlib Scikit-learn SPSS Minitab MATLAB Apache Spark SQL MS Excel MS Visio Tableau MySQL Oracle Database Microsoft Access\nData Analyst Company Name State 07/2016 to Current Data Analyst Student Manager Company Name State 09/2015 to 05/2016 Undertook a leadership and advisory role in training newcomers to hone their culinary and behavioral skills. Intern Company Name None 06/2013 to 07/2013 Identified the areas in the assembly line of a light commercial vehicle where more operations could be housed. Developed a detailed model of improved layout to accommodate more operations using AutoCAD to improve the space utilization by 300%. Consultant None None None Consultant for a self-storage company to classify the customers as 'worthy' and 'not worthy' based on their activity on the company website using the Random Forest algorithm.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"15ab05cb5e804a7e8989eb25bc0b4b37"}},"metadata":{}},{"name":"stdout","text":"0.3556215763092041\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5377b66d39ba447795ec635518563c4d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"015f292ca61d47fdaf7dbe53548b3fee"}},"metadata":{}},{"name":"stdout","text":"\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"edeb065cca9143b2ac67872c5a9e5216"}},"metadata":{}},{"name":"stdout","text":"-0.07479621469974518\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a0c67ab9eb1049849fa9fb6a60e4d546"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e55808316bb54a45a339dadb98c2dec0"}},"metadata":{}},{"name":"stdout","text":"3D assembly language AutoCAD automobiles C C language CAD Chinese Clustering com controller data analysis Database database software designing economics Editing embedded system English Experiments GUI graphic Java Laser Lathe Machine Learning MATLAB Mechanical Mechanical Design Mechanical Engineering Excel Windows 7 Word Mill Modeling Networks Neural Operating Systems OS painting camera PLC predict producing Programming Python Rendering Research Robotics Simulation Solidworks SPSS SQL SQL Server STATA Statistics system design Trading System vision\nR&D Product Development Engineer Company Name City June 2016 to Current Design and build a tail-sitter VTOL(vertical take off and landing) UAV(unmanned aerial vehicle) which takes off and lands vertically and travels horizontally. Main duties include but not limit to aerodynamics modeling, UAV control system design, mechanical manufacturing, simulation and tuning/experiments. Research assistant Company Name City May 2015 to February 2016 Research assistant for Wharton School environment economics projects on Europe Emission Trading System (EU ETC). Main duties include large scale data collecting, cleaning, merging, database construction and data analysis, etc. Mechanical Technician Company Name City August 2013 to September 2013 Check, report on reducer components, automobile chassis producing, processing and assembly line. Trained in mechanical manufacturing fundamentals in industrial production of automobiles.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7000f70c46d746faa88a91bf06cafcd9"}},"metadata":{}},{"name":"stdout","text":"0.3724411129951477\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1e3f3486f5a3465190cc13c3cd09dede"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"91136a45d998464081fe97f2d1a58445"}},"metadata":{}},{"name":"stdout","text":"\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f5c7d47893f54b52a560d89d75c9e2b6"}},"metadata":{}},{"name":"stdout","text":"-0.07479621469974518\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"40febded02da4744b597bff75839bfd4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"55d27177ffa044a29ccf683b4d8efc2c"}},"metadata":{}},{"name":"stdout","text":"\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b457fac626bc4826bcd9dbfc84ce9418"}},"metadata":{}},{"name":"stdout","text":"-0.07479621469974518\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7d19e349664d46208f515c297fc9f6cb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"872ea27263f14daca0017815b0101085"}},"metadata":{}}],"execution_count":72},{"cell_type":"code","source":"# Display ranked candidates\nfor candidate in ranked_candidates:\n    print(f\"Name: {candidate['Name']}, Total Score: {candidate['Total Score']:.2f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:24:14.879257Z","iopub.execute_input":"2025-05-21T10:24:14.879507Z","iopub.status.idle":"2025-05-21T10:24:14.884956Z","shell.execute_reply.started":"2025-05-21T10:24:14.879486Z","shell.execute_reply":"2025-05-21T10:24:14.884201Z"}},"outputs":[{"name":"stdout","text":"Name: Steve SunA, Total Score: 0.51\nName: Steve Sun, Total Score: 0.51\nName: pdf1, Total Score: 0.41\nName: pdf3, Total Score: 0.33\nName: Sagun Pandeypdf2, Total Score: -0.07\nName: Chu-Hsiang Wupdf4, Total Score: -0.07\nName: Aaditya Vijay Hirurkarpdf5, Total Score: -0.07\n","output_type":"stream"}],"execution_count":73},{"cell_type":"code","source":"# Plot the scores\nplot_scores(ranked_candidates)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-21T10:24:14.886166Z","iopub.execute_input":"2025-05-21T10:24:14.886472Z","iopub.status.idle":"2025-05-21T10:24:15.169465Z","shell.execute_reply.started":"2025-05-21T10:24:14.886449Z","shell.execute_reply":"2025-05-21T10:24:15.168675Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":74}]}