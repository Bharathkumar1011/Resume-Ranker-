{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1971405,"sourceType":"datasetVersion","datasetId":1177531}],"dockerImageVersionId":31011,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install -q torch transformers accelerate bitsandbytes langchain sentence-transformers faiss-cpu openpyxl pacmap datasets langchain-community ragatouille","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:34:42.110863Z","iopub.execute_input":"2025-04-27T10:34:42.111150Z","iopub.status.idle":"2025-04-27T10:36:12.911116Z","shell.execute_reply.started":"2025-04-27T10:34:42.111124Z","shell.execute_reply":"2025-04-27T10:36:12.910365Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m1.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m8.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m31.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m8.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m86.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m76.1/76.1 MB\u001b[0m \u001b[31m21.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m30.7/30.7 MB\u001b[0m \u001b[31m56.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m70.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m36.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.7/45.7 kB\u001b[0m \u001b[31m1.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.1/116.1 kB\u001b[0m \u001b[31m6.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m183.9/183.9 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m437.2/437.2 kB\u001b[0m \u001b[31m26.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.4/44.4 kB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.4/4.4 MB\u001b[0m \u001b[31m77.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.7/7.7 MB\u001b[0m \u001b[31m99.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m40.8/40.8 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m306.6/306.6 kB\u001b[0m \u001b[31m13.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m263.6/263.6 kB\u001b[0m \u001b[31m16.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m661.2/661.2 kB\u001b[0m \u001b[31m30.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m129.3/129.3 kB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ngcsfs 2024.10.0 requires fsspec==2024.10.0, but you have fsspec 2024.12.0 which is incompatible.\nbigframes 1.36.0 requires rich<14,>=12.4.4, but you have rich 14.0.0 which is incompatible.\npylibcugraph-cu12 24.12.0 requires pylibraft-cu12==24.12.*, but you have pylibraft-cu12 25.2.0 which is incompatible.\npylibcugraph-cu12 24.12.0 requires rmm-cu12==24.12.*, but you have rmm-cu12 25.2.0 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0m","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:34.467903Z","iopub.execute_input":"2025-04-27T10:36:34.468196Z","iopub.status.idle":"2025-04-27T10:36:34.736762Z","shell.execute_reply.started":"2025-04-27T10:36:34.468170Z","shell.execute_reply":"2025-04-27T10:36:34.736217Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"from tqdm.notebook import tqdm\nimport pandas as pd\nfrom typing import Optional, List, Tuple\nfrom datasets import Dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:34.737887Z","iopub.execute_input":"2025-04-27T10:36:34.738369Z","iopub.status.idle":"2025-04-27T10:36:36.208346Z","shell.execute_reply.started":"2025-04-27T10:36:34.738349Z","shell.execute_reply":"2025-04-27T10:36:36.207591Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/resume-dataset/UpdatedResumeDataSet.csv')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:36.209642Z","iopub.execute_input":"2025-04-27T10:36:36.210418Z","iopub.status.idle":"2025-04-27T10:36:36.324126Z","shell.execute_reply.started":"2025-04-27T10:36:36.210397Z","shell.execute_reply":"2025-04-27T10:36:36.323417Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"# Convert to HuggingFace Dataset\ndataset = Dataset.from_pandas(df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:36.324937Z","iopub.execute_input":"2025-04-27T10:36:36.325188Z","iopub.status.idle":"2025-04-27T10:36:36.371138Z","shell.execute_reply.started":"2025-04-27T10:36:36.325166Z","shell.execute_reply":"2025-04-27T10:36:36.370408Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"from langchain.docstore.document import Document as LangchainDocument\n\nRAW_KNOWLEDGE_BASE = [\n    LangchainDocument(page_content=doc[\"Resume\"], metadata={\"Category\": doc[\"Category\"]}) for doc in tqdm(dataset)\n]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:36.372360Z","iopub.execute_input":"2025-04-27T10:36:36.372545Z","iopub.status.idle":"2025-04-27T10:36:36.781189Z","shell.execute_reply.started":"2025-04-27T10:36:36.372530Z","shell.execute_reply":"2025-04-27T10:36:36.780266Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/962 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0647ad9ac1e34bbf9535167f7451ce98"}},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n# We use a hierarchical list of separators specifically tailored for splitting Markdown documents\n# This list is taken from LangChain's MarkdownTextSplitter class\nMARKDOWN_SEPARATORS = [\n    \"\\n#{1,6} \",\n    \"```\\n\",\n    \"\\n\\\\*\\\\*\\\\*+\\n\",\n    \"\\n---+\\n\",\n    \"\\n___+\\n\",\n    \"\\n\\n\",\n    \"\\n\",\n    \" \",\n    \"\",\n]\n\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,  # The maximum number of characters in a chunk: we selected this value arbitrarily\n    chunk_overlap=100,  # The number of characters to overlap between chunks\n    add_start_index=True,  # If `True`, includes chunk's start index in metadata\n    strip_whitespace=True,  # If `True`, strips whitespace from the start and end of every document\n    separators=MARKDOWN_SEPARATORS,\n)\n\ndocs_processed = []\nfor doc in RAW_KNOWLEDGE_BASE:\n    docs_processed += text_splitter.split_documents([doc])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:57.552469Z","iopub.execute_input":"2025-04-27T10:36:57.552742Z","iopub.status.idle":"2025-04-27T10:36:57.823167Z","shell.execute_reply.started":"2025-04-27T10:36:57.552721Z","shell.execute_reply":"2025-04-27T10:36:57.822611Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"from sentence_transformers import SentenceTransformer\n\n# To get the value of the max sequence_length, we will query the underlying `SentenceTransformer` object used in the RecursiveCharacterTextSplitter\nprint(f\"Model's maximum sequence length: {SentenceTransformer('thenlper/gte-small').max_seq_length}\")\n\nfrom transformers import AutoTokenizer\n\ntokenizer = AutoTokenizer.from_pretrained(\"thenlper/gte-small\")\nlengths = [len(tokenizer.encode(doc.page_content)) for doc in tqdm(docs_processed)]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:36:59.875998Z","iopub.execute_input":"2025-04-27T10:36:59.876541Z","iopub.status.idle":"2025-04-27T10:37:32.868733Z","shell.execute_reply.started":"2025-04-27T10:36:59.876510Z","shell.execute_reply":"2025-04-27T10:37:32.867810Z"}},"outputs":[{"name":"stderr","text":"2025-04-27 10:37:10.815598: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1745750230.997975      31 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1745750231.049688      31 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/385 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e8baaada5c1c4441b3a9811275ff05ec"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/68.1k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"29d30068f0be4ad2ab3de5f9d47a87c7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/57.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9e4ca32a35204d4284c8e1fde0c6369f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/583 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f427d285ea0c4a2daad61a0b0c2401b3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/66.7M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7219c81a081e4b699cab8266f9580493"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/394 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9ac4883469144901b92a0f7c302aad2c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7acfa467a73346a6b3e785d34f2cf96f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/712k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e4e115cb459c45f090d9ccdfaf9d176f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/125 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ff930eab481a469bb160e60e19c6aba6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d57012d5ce95479c8b44ddce12f6885d"}},"metadata":{}},{"name":"stdout","text":"Model's maximum sequence length: 512\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/3893 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4c707d8bc29943a3bcc9cda5b927ffb4"}},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"EMBEDDING_MODEL_NAME = \"thenlper/gte-small\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:37:32.869892Z","iopub.execute_input":"2025-04-27T10:37:32.870118Z","iopub.status.idle":"2025-04-27T10:37:32.873381Z","shell.execute_reply.started":"2025-04-27T10:37:32.870101Z","shell.execute_reply":"2025-04-27T10:37:32.872864Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"from langchain.vectorstores import FAISS\nfrom langchain_community.embeddings import HuggingFaceEmbeddings\nfrom langchain_community.vectorstores.utils import DistanceStrategy\n\nembedding_model = HuggingFaceEmbeddings(\n    model_name=EMBEDDING_MODEL_NAME,\n    multi_process=True,\n    model_kwargs={\"device\": \"cuda\"},\n    encode_kwargs={\"normalize_embeddings\": True},  # Set `True` for cosine similarity\n)\n\nKNOWLEDGE_VECTOR_DATABASE = FAISS.from_documents(\n    docs_processed, embedding_model, distance_strategy=DistanceStrategy.COSINE\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:37:38.871335Z","iopub.execute_input":"2025-04-27T10:37:38.871917Z","iopub.status.idle":"2025-04-27T10:37:57.922756Z","shell.execute_reply.started":"2025-04-27T10:37:38.871894Z","shell.execute_reply":"2025-04-27T10:37:57.922178Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_31/2775243909.py:5: LangChainDeprecationWarning: The class `HuggingFaceEmbeddings` was deprecated in LangChain 0.2.2 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-huggingface package and should be used instead. To use it run `pip install -U :class:`~langchain-huggingface` and import as `from :class:`~langchain_huggingface import HuggingFaceEmbeddings``.\n  embedding_model = HuggingFaceEmbeddings(\n2025-04-27 10:37:45.270091: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1745750265.292369     133 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1745750265.299275     133 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Chunks:   0%|          | 0/10 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5e5070ee8e1d40f4bb5f4e51527dae53"}},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"KNOWLEDGE_VECTOR_DATABASE","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:38:03.375376Z","iopub.execute_input":"2025-04-27T10:38:03.375659Z","iopub.status.idle":"2025-04-27T10:38:03.381085Z","shell.execute_reply.started":"2025-04-27T10:38:03.375638Z","shell.execute_reply":"2025-04-27T10:38:03.380316Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"<langchain_community.vectorstores.faiss.FAISS at 0x7d1261e12550>"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"# retriever = KNOWLEDGE_VECTOR_DATABASE.as_retriever()\nretriever = KNOWLEDGE_VECTOR_DATABASE.as_retriever(search_kwargs={\"k\": 5})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:42:34.333184Z","iopub.execute_input":"2025-04-27T10:42:34.333830Z","iopub.status.idle":"2025-04-27T10:42:34.338609Z","shell.execute_reply.started":"2025-04-27T10:42:34.333789Z","shell.execute_reply":"2025-04-27T10:42:34.337862Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"docs = retriever.invoke(\"\"\"**Job Duties:**  \n- Develop and deploy **machine learning models** to solve business problems.  \n- Clean, process, and analyze **large datasets** to extract actionable insights.  \n- Collaborate with **cross-functional teams** (engineering, product, marketing) to implement data-driven solutions.  \n- Design and maintain **data pipelines** for efficient data collection and processing.  \n- Conduct **statistical analysis and A/B testing** to measure the impact of business decisions.  \n- Build **predictive models and recommendation systems** to enhance user experience.  \n- Create **data visualizations and dashboards** to communicate findings to stakeholders.  \n- Stay updated with the latest advancements in **AI/ML** and apply best practices.  \n- Automate data workflows to improve **efficiency and scalability**.  \n- Perform other **ad-hoc data-related tasks** as required.  \n\n**Required Skills & Qualifications:**  \n- **Technical Skills:**  \n  - Strong proficiency in **Python (Pandas, NumPy, Scikit-learn, TensorFlow/PyTorch)**.  \n  - Experience with **SQL** and big data tools (Spark, Hadoop).  \n  - Knowledge of **statistics, machine learning, and deep learning** techniques.  \n  - Familiarity with **data visualization tools** (Tableau, Power BI, Matplotlib/Seaborn).  \n  - Experience with **cloud platforms** (AWS, GCP, or Azure) and MLOps tools.  \n- **Soft Skills:**  \n  - Strong **problem-solving and analytical thinking**.  \n  - Ability to communicate complex findings to **non-technical stakeholders**.  \n  - Team collaboration and **project management** skills.  \n\n**Experience:**  \n- **3+ years** of hands-on experience in **data science, machine learning, or analytics**.  \n- Proven track record of **deploying ML models in production**.  \n- Experience with **end-to-end data pipelines** (ETL, feature engineering, model deployment).  \n- Prior work in **recommendation systems, NLP, or computer vision** is a plus.  \n\n**Location:**  \n- **Hybrid/Remote** (with occasional office visits if required).  \n- Preferred locations: **Mumbai, Bangalore, or Pune** (open to remote for strong candidates).  \n\n**Additional Preferences:**  \n- Experience with **GenAI/LLMs** (e.g., OpenAI, LangChain) is a **big plus**.  \n- Knowledge of **SAP HANA, R, or T-SQL** (for roles involving enterprise data).  \n\"\"\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:53:15.556523Z","iopub.execute_input":"2025-04-27T10:53:15.556865Z","iopub.status.idle":"2025-04-27T10:53:24.211518Z","shell.execute_reply.started":"2025-04-27T10:53:15.556843Z","shell.execute_reply":"2025-04-27T10:53:24.210964Z"}},"outputs":[{"name":"stderr","text":"2025-04-27 10:53:20.476304: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1745751200.497852     201 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1745751200.504675     201 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Chunks:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4a2b782aafef4de5bba8616d542943b4"}},"metadata":{}}],"execution_count":36},{"cell_type":"code","source":"import pprint","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:53:28.699631Z","iopub.execute_input":"2025-04-27T10:53:28.699940Z","iopub.status.idle":"2025-04-27T10:53:28.703266Z","shell.execute_reply.started":"2025-04-27T10:53:28.699917Z","shell.execute_reply":"2025-04-27T10:53:28.702654Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"pprint.pp(docs)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T10:53:28.955602Z","iopub.execute_input":"2025-04-27T10:53:28.956113Z","iopub.status.idle":"2025-04-27T10:53:28.960607Z","shell.execute_reply.started":"2025-04-27T10:53:28.956087Z","shell.execute_reply":"2025-04-27T10:53:28.959739Z"}},"outputs":[{"name":"stdout","text":"[Document(id='ae74bae9-6351-4aa7-930f-ae868128532e', metadata={'Category': 'Data Science', 'start_index': 927}, page_content='company - Aegis school of Data Science & Business\\r\\ndescription - Mostly working on industry project for providing solution along with Teaching Appointments: Teach undergraduate and graduate-level courses in Spark and Machine Learning as an adjunct faculty member at Aegis School of Data Science, Mumbai (2017 to Present)\\r\\ncompany - Aegis school of Data & Business\\r\\ndescription - Data Science Intern, Nov 2015 to Jan 2016\\r\\n\\r\\nFurnish executive leadership team with insights, analytics, reports and recommendations enabling effective strategic planning across all business units, distribution channels and product lines.\\r\\n\\r\\nâ\\x9e\\x94 Chat Bot using AWS LEX and Tensor flow  Python'),\n Document(id='1eaea8ad-cae4-4ea4-8428-e2a3478fab31', metadata={'Category': 'Data Science', 'start_index': 927}, page_content='company - Aegis school of Data Science & Business\\r\\ndescription - Mostly working on industry project for providing solution along with Teaching Appointments: Teach undergraduate and graduate-level courses in Spark and Machine Learning as an adjunct faculty member at Aegis School of Data Science, Mumbai (2017 to Present)\\r\\ncompany - Aegis school of Data & Business\\r\\ndescription - Data Science Intern, Nov 2015 to Jan 2016\\r\\n\\r\\nFurnish executive leadership team with insights, analytics, reports and recommendations enabling effective strategic planning across all business units, distribution channels and product lines.\\r\\n\\r\\nâ\\x9e\\x94 Chat Bot using AWS LEX and Tensor flow  Python'),\n Document(id='ed19e4fb-b297-48eb-9c48-e2fc42f4e4f5', metadata={'Category': 'Data Science', 'start_index': 927}, page_content='company - Aegis school of Data Science & Business\\r\\ndescription - Mostly working on industry project for providing solution along with Teaching Appointments: Teach undergraduate and graduate-level courses in Spark and Machine Learning as an adjunct faculty member at Aegis School of Data Science, Mumbai (2017 to Present)\\r\\ncompany - Aegis school of Data & Business\\r\\ndescription - Data Science Intern, Nov 2015 to Jan 2016\\r\\n\\r\\nFurnish executive leadership team with insights, analytics, reports and recommendations enabling effective strategic planning across all business units, distribution channels and product lines.\\r\\n\\r\\nâ\\x9e\\x94 Chat Bot using AWS LEX and Tensor flow  Python'),\n Document(id='56e835f0-76c0-4fbd-b815-8878f6e5ef0f', metadata={'Category': 'Data Science', 'start_index': 927}, page_content='company - Aegis school of Data Science & Business\\r\\ndescription - Mostly working on industry project for providing solution along with Teaching Appointments: Teach undergraduate and graduate-level courses in Spark and Machine Learning as an adjunct faculty member at Aegis School of Data Science, Mumbai (2017 to Present)\\r\\ncompany - Aegis school of Data & Business\\r\\ndescription - Data Science Intern, Nov 2015 to Jan 2016\\r\\n\\r\\nFurnish executive leadership team with insights, analytics, reports and recommendations enabling effective strategic planning across all business units, distribution channels and product lines.\\r\\n\\r\\nâ\\x9e\\x94 Chat Bot using AWS LEX and Tensor flow  Python'),\n Document(id='064d759a-d39c-44ba-9f6a-699ddc7ec355', metadata={'Category': 'Data Science', 'start_index': 0}, page_content='Skills â\\x80¢ R â\\x80¢ Python â\\x80¢ SAP HANA â\\x80¢ Tableau â\\x80¢ SAP HANA SQL â\\x80¢ SAP HANA PAL â\\x80¢ MS SQL â\\x80¢ SAP Lumira â\\x80¢ C# â\\x80¢ Linear Programming â\\x80¢ Data Modelling â\\x80¢ Advance Analytics â\\x80¢ SCM Analytics â\\x80¢ Retail Analytics â\\x80¢Social Media Analytics â\\x80¢ NLP Education Details \\r\\nJanuary 2017 to January 2018 PGDM Business Analytics  Great Lakes Institute of Management & Illinois Institute of Technology\\r\\nJanuary 2013 Bachelor of Engineering Electronics and Communication Bengaluru, Karnataka New Horizon College of Engineering, Bangalore Visvesvaraya Technological University\\r\\nData Science Consultant \\r\\n\\r\\nConsultant - Deloitte USI\\r\\nSkill Details \\r\\nLINEAR PROGRAMMING- Exprience - 6 months\\r\\nRETAIL- Exprience - 6 months\\r\\nRETAIL MARKETING- Exprience - 6 months\\r\\nSCM- Exprience - 6 months\\r\\nSQL- Exprience - Less than 1 year months\\r\\nDeep Learning- Exprience - Less than 1 year months\\r\\nMachine learning- Exprience - Less than 1 year months\\r\\nPython- Exprience - Less than 1 year months')]\n","output_type":"stream"}],"execution_count":38}]}